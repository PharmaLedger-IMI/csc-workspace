domainRequire=(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({"./../../domain":[function(require,module,exports){

const USER_DETAILS = "user-details.json";

$$.swarms.describe("readDir", {
    getKeySSI: function(path, mountPoint) {
        if (rawDossier) {
            return rawDossier.listMountedDossiers(path, (err, result) => {
                if (err) {
                    return this.return(err);
                }

                let selectedDsu = result.find((dsu) => dsu.path === mountPoint);
                if (!selectedDsu) {
                    return this.return(new Error(`Dossier with the name ${mountPoint} was not found in the mounted points!`));
                }

                this.return(undefined, selectedDsu.identifier);
            });
        }
        this.return(new Error("Raw Dossier is not available."));
    },

    getUserDetails: function() {
        if (!rawDossier) {
            return this.return(new Error("Raw Dossier is not available."));
        }
        rawDossier.readFile(USER_DETAILS, (err, fileContent) => {
            if(err) {
                return this.return(err);
            }
            const dataSerialization = fileContent.toString();
            return this.return(undefined, JSON.parse(dataSerialization));
        });
    },
});

},{}],"/Users/blazini1/csc-workspace/menu-wallet-prototype/builds/tmp/domain_intermediar.js":[function(require,module,exports){
(function (global){(function (){
global.domainLoadModules = function(){ 

	if(typeof $$.__runtimeModules["./../../domain"] === "undefined"){
		$$.__runtimeModules["./../../domain"] = require("./../../domain");
	}
};
if (true) {
	domainLoadModules();
}
global.domainRequire = require;
if (typeof $$ !== "undefined") {
	$$.requireBundle("domain");
}

}).call(this)}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

},{"./../../domain":"./../../domain"}]},{},["/Users/blazini1/csc-workspace/menu-wallet-prototype/builds/tmp/domain_intermediar.js"])